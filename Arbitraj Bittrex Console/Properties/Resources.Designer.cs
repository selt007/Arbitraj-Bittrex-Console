//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Arbitraj_Bittrex_Console.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Arbitraj_Bittrex_Console.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] Newtonsoft_Json {
            get {
                object obj = ResourceManager.GetObject("Newtonsoft_Json", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] Newtonsoft_Json1 {
            get {
                object obj = ResourceManager.GetObject("Newtonsoft_Json1", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] Newtonsoft_Json2 {
            get {
                object obj = ResourceManager.GetObject("Newtonsoft_Json2", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] Newtonsoft_Json3 {
            get {
                object obj = ResourceManager.GetObject("Newtonsoft_Json3", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;nlog xmlns=&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;
        ///      xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        ///    &lt;targets&gt;
        ///        &lt;target name=&quot;file&quot;  xsi:type=&quot;File&quot; fileName=&quot;${basedir}/Bittrex (log).txt&quot; layout=&quot;${date}|${message}&quot; /&gt;
        ///    &lt;/targets&gt;
        ///    &lt;rules&gt;
        ///        &lt;logger name=&quot;*&quot; minlevel=&quot;Trace&quot; writeTo=&quot;file&quot; /&gt;
        ///    &lt;/rules&gt;
        ///&lt;/nlog&gt;.
        /// </summary>
        internal static string NLog {
            get {
                return ResourceManager.GetString("NLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] NLog1 {
            get {
                object obj = ResourceManager.GetObject("NLog1", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;nlog xmlns=&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;
        ///      xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        ///    &lt;targets&gt;
        ///        &lt;target name=&quot;file&quot;  xsi:type=&quot;File&quot; fileName=&quot;${basedir}/Bittrex (log).txt&quot; layout=&quot;${date}|${message}&quot; /&gt;
        ///    &lt;/targets&gt;
        ///    &lt;rules&gt;
        ///        &lt;logger name=&quot;*&quot; minlevel=&quot;Trace&quot; writeTo=&quot;file&quot; /&gt;
        ///    &lt;/rules&gt;
        ///&lt;/nlog&gt;.
        /// </summary>
        internal static string NLog2 {
            get {
                return ResourceManager.GetString("NLog2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] NLog3 {
            get {
                object obj = ResourceManager.GetObject("NLog3", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;nlog xmlns=&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;
        ///      xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        ///    &lt;targets&gt;
        ///        &lt;target name=&quot;file&quot;  xsi:type=&quot;File&quot; fileName=&quot;${basedir}/Bittrex (log).txt&quot; layout=&quot;${date}|${message}&quot; /&gt;
        ///    &lt;/targets&gt;
        ///    &lt;rules&gt;
        ///        &lt;logger name=&quot;*&quot; minlevel=&quot;Trace&quot; writeTo=&quot;file&quot; /&gt;
        ///    &lt;/rules&gt;
        ///&lt;/nlog&gt;.
        /// </summary>
        internal static string NLog4 {
            get {
                return ResourceManager.GetString("NLog4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;nlog xmlns=&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;
        ///      xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        ///    &lt;targets&gt;
        ///        
        ///        &lt;target name=&quot;file&quot;  xsi:type=&quot;File&quot; fileName=&quot;${basedir}/nlog.txt&quot; layout=&quot;${date}|${message}&quot; /&gt;
        ///    &lt;/targets&gt;
        ///    &lt;rules&gt;
        ///        
        ///        &lt;logger name=&quot;*&quot; minlevel=&quot;Trace&quot; writeTo=&quot;file&quot; /&gt;
        ///    &lt;/rules&gt;
        ///&lt;/nlog&gt;.
        /// </summary>
        internal static string NLog5 {
            get {
                return ResourceManager.GetString("NLog5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] NLog6 {
            get {
                object obj = ResourceManager.GetObject("NLog6", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
